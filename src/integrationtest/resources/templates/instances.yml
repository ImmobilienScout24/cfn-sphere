AWSTemplateFormatVersion: "2010-09-09"
Description: "Small Test App Example Template"
Parameters:
  vpcID:
    Description: "VPC ID"
    Type: "AWS::EC2::VPC::Id"
  subnetID:
    Description: "VPC Subnet IDs"
    Type: "AWS::EC2::Subnet::Id"
  appVersion:
    Description: "Application version"
    Type: "String"
Resources:
  jobQueue:
    Type: "AWS::SQS::Queue"
  secGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Test Group"
      VpcId: "|Ref|vpcID"
  asg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
        - "eu-west-1a"
      Cooldown: '10'
      HealthCheckGracePeriod: '600'
      HealthCheckType: EC2
      LaunchConfigurationName:
        Ref: lc
      MaxSize: '0'
      MinSize: '0'
      DesiredCapacity: '0'
      VPCZoneIdentifier:
        - "|Ref|subnetID"
  lc:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      AssociatePublicIpAddress: false
      ImageId: "ami-e4d18e93"
      InstanceType: t2.micro
      "@TaupageUserData@":
        application_id: "|Ref|AWS::StackName"
        application_version: "|Ref|appVersion"
        source:
          '|Join|':
            - "my-private-registry/foo"
            - "|Ref|appVersion"
        health_check_path: "/status"
        health_check_port: 8080
        health_check_timeout_seconds: 900
        cloudwatch_logs:
          /var/log/syslog: "my-syslog-group"
          /var/log/application.log: "my-application-log-group"
        healthcheck:
          type: elb
          loadbalancer_name: "my-elb"
        notify_cfn:
          resource: asg
          stack: "|Ref|AWS::StackName"
        ports:
          8080: 9000
        root: true
        runtime: Docker
        dockercfg:
          'https://my-private-registry':
            auth: "my-secret-string"
            email: "test@example.com"
        environment:
          DYNAMO_DB_PREFIX: "|Ref|AWS::StackName"
          JOB_QUEUE_URL: "|Ref|jobQueue"
